@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix : <http://www.w3.org/2009/sparql/docs/tests/data-sparql11/functions/manifest#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .
@prefix dawgt:   <http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#> .

<>  rdf:type mf:Manifest ;
    rdfs:label "Built-in Functions" ;
    mf:entries
    ( 
	:strdt01
	:strdt02
	:strlang01
	:strlang02
	:isnumeric01
	:abs01
	:ceil01
	:floor01
	:round01
	:concat01
	:substring01
	:substring02
	:length01
	:ucase01
	:lcase01
	:encode01
	:contains01
	:starts01
	:ends01
	:plus-1
	:plus-2
	:md5-01
	:md5-02
	:sha1-01
	:sha224-01
	:sha256-01
	:sha384-01
	:sha512-01
	:minutes
	:seconds
	:hours
	:month
	:year
	:day
	:timezone
	:tz
 ) .


:strdt01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "STRDT()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <strdt01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <strdt01.srx> ;
	.

:strdt02 rdf:type mf:QueryEvaluationTest ;
	mf:name    "STRDT(STR())" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <strdt02.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <strdt02.srx> ;
	.

:strlang01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "STRLANG()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <strlang01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <strlang01.srx> ;
	.

:strlang02 rdf:type mf:QueryEvaluationTest ;
	mf:name    "STRLANG(STR())" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <strlang02.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <strlang02.srx> ;
	.

:isnumeric01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "isNumeric()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <isnumeric01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <isnumeric01.srx> ;
	.

:abs01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "ABS()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <abs01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <abs01.srx> ;
	.

:ceil01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "CEIL()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <ceil01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <ceil01.srx> ;
	.

:floor01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "FLOOR()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <floor01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <floor01.srx> ;
	.

:round01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "ROUND()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <round01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <round01.srx> ;
	.

:concat01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "CONCAT()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <concat01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <concat01.srx> ;
	.

:substring01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "SUBSTRING() (3-argument)" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <substring01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <substring01.srx> ;
	.

:substring02 rdf:type mf:QueryEvaluationTest ;
	mf:name    "SUBSTRING() (2-argument)" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <substring02.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <substring02.srx> ;
	.

:length01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "STRLEN()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <length01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <length01.srx> ;
	.

:ucase01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "UCASE()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <ucase01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <ucase01.srx> ;
	.

:lcase01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "LCASE()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <lcase01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <lcase01.srx> ;
	.

:encode01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "ENCODE_FOR_URI()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <encode01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <encode01.srx> ;
	.

:contains01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "CONTAINS()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <contains01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <contains01.srx> ;
	.

:starts01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "STARTS()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <starts01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <starts01.srx> ;
	.

:ends01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "ENDS()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <ends01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <ends01.srx> ;
	.

:plus-1 a mf:QueryEvaluationTest ;
    mf:name    "plus-1" ;
    rdfs:comment	"plus operator on ?x + ?y on string and numeric values" ;
    mf:action
       [ qt:query  <plus-1.rq> ;
	 qt:data   <data-builtin-3.ttl> ] ;
     dawgt:approval dawgt:NotClassified ;
    mf:result  <plus-1.srx> ;
    .

:plus-2 a mf:QueryEvaluationTest ;
    mf:name    "plus-2" ;
    rdfs:comment	"plus operator in combination with str(), i.e.  str(?x) + str(?y), on string and numeric values" ;
    mf:action
       [ qt:query  <plus-2.rq> ;
	 qt:data   <data-builtin-3.ttl> ] ;
     dawgt:approval dawgt:NotClassified ;
    mf:result  <plus-2.srx> ;
    .

:md5-01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "MD5()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <md5-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <md5-01.srx> ;
	.

:md5-02 rdf:type mf:QueryEvaluationTest ;
	mf:name    "MD5() over Unicode data" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <md5-02.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <md5-02.srx> ;
	.

:sha1-01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "SHA1()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <sha1-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <sha1-01.srx> ;
	.

:sha224-01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "SHA224()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <sha224-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <sha224-01.srx> ;
	.

:sha256-01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "SHA256()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <sha256-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <sha256-01.srx> ;
	.

:sha384-01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "SHA384()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <sha384-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <sha384-01.srx> ;
	.

:sha512-01 rdf:type mf:QueryEvaluationTest ;
	mf:name    "SHA512()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <sha512-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <sha512-01.srx> ;
	.

:hours rdf:type mf:QueryEvaluationTest ;
	mf:name    "HOURS()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <hours-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <hours-01.srx> ;
	.

:minutes rdf:type mf:QueryEvaluationTest ;
	mf:name    "MINUTES()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <minutes-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <minutes-01.srx> ;
	.

:seconds rdf:type mf:QueryEvaluationTest ;
	mf:name    "SECONDS()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <seconds-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <seconds-01.srx> ;
	.

:year rdf:type mf:QueryEvaluationTest ;
	mf:name    "YEAR()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <year-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <year-01.srx> ;
	.

:month rdf:type mf:QueryEvaluationTest ;
	mf:name    "MONTH()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <month-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <month-01.srx> ;
	.

:day rdf:type mf:QueryEvaluationTest ;
	mf:name    "DAY()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <day-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <day-01.srx> ;
	.

:timezone rdf:type mf:QueryEvaluationTest ;
	mf:name    "TIMEZONE()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <timezone-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <timezone-01.srx> ;
	.

:tz rdf:type mf:QueryEvaluationTest ;
	mf:name    "TZ()" ;
    dawgt:approval dawgt:NotClassified ;
    mf:action
         [ qt:query  <tz-01.rq> ;
           qt:data   <data.ttl> ] ;
    mf:result  <tz-01.srx> ;
	.

