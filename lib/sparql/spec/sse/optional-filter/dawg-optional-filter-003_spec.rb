# coding: utf-8
#
require 'spec_helper'

# Auto-generated by build_w3c_tests.rb
#
# OPTIONAL - Outer FILTER with BOUND
# Use !bound to only run outer FILTERs against variables bound in an OPTIONAL
# /Users/ben/repos/datagraph/tests/tests/data-r2/optional-filter/expr-3.rq
#
# This is a W3C test from the DAWG test suite:
# http://www.w3.org/2001/sw/DataAccess/tests/r2#dawg-optional-filter-003
#
# This test is approved: 
# http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html
#
# 20101218 jaa : bug : the solution field requires a place-holder for unbound variables
# 20101219 jaa : unbound marker now supported

describe "W3C test" do
  context "optional-filter" do
    before :all do
      @data = %q{
@prefix x: <http://example.org/ns#> .
@prefix : <http://example.org/books#> .
@prefix dc:         <http://purl.org/dc/elements/1.1/> .
@prefix xsd:        <http://www.w3.org/2001/XMLSchema#> .

:book1 dc:title "TITLE 1" .
:book1 x:price  "10"^^xsd:integer .

:book2 dc:title "TITLE 2" .
:book2 x:price  "20"^^xsd:integer .

:book3 dc:title "TITLE 3" .

}
      @query = %q{
        (prefix ((dc: <http://purl.org/dc/elements/1.1/>)
                 (x: <http://example.org/ns#>))
          (project (?title ?price)
            (filter (|| (! (bound ?price)) (< ?price 15))
              (leftjoin
                (bgp (triple ?book dc:title ?title))
                (bgp (triple ?book x:price ?price))))))
}
    end

    example "OPTIONAL - Outer FILTER with BOUND" do
    
      graphs = {}
      graphs[:default] = { :data => @data, :format => :ttl}


      repository = 'optional-filter-dawg-optional-filter-003'
      expected = [
          { 
              :title => RDF::Literal.new('TITLE 3' ),
          },
          { 
              :price => RDF::Literal.new('10' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
              :title => RDF::Literal.new('TITLE 1' ),
          },
      ]


      sparql_query(:graphs => graphs, :query => @query,       # unordered comparison in rspec is =~
                   :repository => repository, :form => :select).should =~ expected
    end
  end
end
