# coding: utf-8
#
require 'spec_helper'

# Auto-generated by build_w3c_tests.rb
#
# GROUP_CONCAT 2
# 
# /Users/ben/Repos/datagraph/tests/tests/sparql11-tests/data-sparql11/aggregates/agg-groupconcat-2.rq
#
# This is a W3C test from the DAWG test suite:
# http://www.w3.org/2001/sw/DataAccess/tests/r2#agg-groupconcat-02
#
# This test is approved: 
# http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2
#
describe "W3C test" do
  context "aggregates" do
    before :all do
      @data = %q{
@prefix : <http://www.example.org/> .

:s :p1 "1", "22" .
:s :p2 "aaa", "bb", "c" .

}
      @query = %q{
PREFIX : <http://www.example.org/>
SELECT (COUNT(*) AS ?c) {
	{SELECT ?p (GROUP_CONCAT(?o) AS ?g) WHERE {
		[] ?p ?o
	} GROUP BY ?p}
	FILTER(
		(?p = :p1 && (?g = "1 22" || ?g = "22 1"))
		|| (?p = :p2 && (?g = "aaa bb c" || ?g = "aaa c bb" || ?g = "bb aaa c" || ?g = "bb c aaa" || ?g = "c aaa bb" || ?g = "c bb aaa"))
	)
}

}
    end

    example "GROUP_CONCAT 2", :unverified => true do
    
      graphs = {}
      graphs[:default] = { :data => @data, :format => :ttl}


      repository = 'aggregates-agg-groupconcat-02'
      expected = [
          { 
              :c => RDF::Literal.new('2' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
          },
      ]


      sparql_query(:graphs => graphs, :query => @query,       # unordered comparison in rspec is =~
                   :repository => repository, :form => :select).should =~ expected
    end
  end
end
