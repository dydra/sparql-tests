# coding: utf-8
#
require 'spec_helper'

# Auto-generated by build_w3c_tests.rb
#
# sq12 - Subquery in CONSTRUCT with built-ins
# This query constructs full names from first and last names
# /Users/ben/Repos/dydra/tests/tests/sparql11-tests/data-sparql11/subquery/sq12.rq
#
# This is a W3C test from the DAWG test suite:
# http://www.w3.org/2001/sw/DataAccess/tests/r2#subquery12
#
# This test is approved: 
# 
#
describe "W3C test" do
  context "subquery" do
    before :all do
      @data = %q{
@prefix foaf: <http://xmlns.com/foaf/0.1/> .

<http://p1> foaf:firstName "John" ; foaf:lastName "Doe".

}
      @query = %q{
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

CONSTRUCT { ?P foaf:name ?FullName }
WHERE {
 SELECT ?P ( CONCAT(?F, " ", ?L) AS ?FullName ) 
 WHERE { ?P foaf:firstName ?F ; foaf:lastName ?L. }
}


}
    end

    example "sq12 - Subquery in CONSTRUCT with built-ins", :status => 'unverified', :w3c_status => 'unapproved' do
    
      graphs = {}
      graphs[:default] = { :data => @data, :format => :ttl}


      repository = 'subquery-subquery12'
      expected = RDF::Graph.new do | graph |
        graph << RDF::Statement.new(
            :subject => RDF::URI('http://p1'),
            :predicate => RDF::URI('http://xmlns.com/foaf/0.1/name'),
            :object => RDF::Literal('John Doe'))
      end

      sparql_query(:graphs => graphs, :query => @query,
                   :repository => repository, :form => :construct).should be_isomorphic_with expected
    end
  end
end
