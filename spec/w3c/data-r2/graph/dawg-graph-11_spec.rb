require 'spec_helper'

# Auto-generated by sparql/builder.rb
#
# graph-11
# Data: default and named (several) / Query: get everything
# /Users/ben/repos/datagraph/tests/tests/data-r2/graph/graph-11.rq
#
# This is a W3C test from the DAWG test suite:
# http://www.w3.org/2001/sw/DataAccess/tests/r2#dawg-graph-11
#
#
# 
# This test is approved: http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes
#
describe "W3C test " do
  describe "graph" do
    before :all do
      @data = %q{
@prefix : <http://example/> .
@prefix xsd:        <http://www.w3.org/2001/XMLSchema#> .

:x :p "1"^^xsd:integer .
:a :p "9"^^xsd:integer .

}
      @query = %q{
PREFIX : <http://example/> 

SELECT * 
{ 
   { ?s ?p ?o }
  UNION
   { GRAPH ?g { ?s ?p ?o } }
}

}
    end

    it "graph-11" do
    
      graphs = { :default => { :data => @data, :format => :ttl} }

      repository = 'graph-dawg-graph-11'
      results = [
          { 
              "g" => RDF::URI('/Users/ben/repos/datagraph/tests/tests/data-r2/graph/data-g3.ttl'),
              "o" => RDF::Literal.new('1' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
              "s" => RDF::Node.new('g12128600'),
              "p" => RDF::URI('http://example/p'),
          },
          { 
              "p" => RDF::URI('http://example/p'),
              "o" => RDF::Literal.new('1' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
              "g" => RDF::URI('/Users/ben/repos/datagraph/tests/tests/data-r2/graph/data-g1.ttl'),
              "s" => RDF::URI('http://example/x'),
          },
          { 
              "g" => RDF::URI('/Users/ben/repos/datagraph/tests/tests/data-r2/graph/data-g1.ttl'),
              "s" => RDF::URI('http://example/a'),
              "p" => RDF::URI('http://example/p'),
              "o" => RDF::Literal.new('9' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
          },
          { 
              "s" => RDF::URI('http://example/x'),
              "o" => RDF::Literal.new('2' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
              "p" => RDF::URI('http://example/q'),
              "g" => RDF::URI('/Users/ben/repos/datagraph/tests/tests/data-r2/graph/data-g2.ttl'),
          },
          { 
              "s" => RDF::URI('http://example/x'),
              "p" => RDF::URI('http://example/p'),
              "o" => RDF::Literal.new('1' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
          },
          { 
              "g" => RDF::URI('/Users/ben/repos/datagraph/tests/tests/data-r2/graph/data-g4.ttl'),
              "o" => RDF::Literal.new('2' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
              "s" => RDF::Node.new('g11879100'),
              "p" => RDF::URI('http://example/q'),
          },
          { 
              "s" => RDF::Node.new('g11860670'),
              "o" => RDF::Literal.new('9' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
              "g" => RDF::URI('/Users/ben/repos/datagraph/tests/tests/data-r2/graph/data-g3.ttl'),
              "p" => RDF::URI('http://example/p'),
          },
          { 
              "s" => RDF::URI('http://example/a'),
              "p" => RDF::URI('http://example/p'),
              "o" => RDF::Literal.new('9' , :datatype => RDF::URI('http://www.w3.org/2001/XMLSchema#integer')),
          },
      ]


      
      sparql_query(:graphs => graphs, :query => @query, 
                   :repository => repository, :form => :select)
    end
  end
end
